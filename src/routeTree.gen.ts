/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DemoIndexRouteImport } from './routes/demo/index'
import { Route as CharacterListIndexRouteImport } from './routes/characterList/index'
import { Route as DemoDemoIdRouteImport } from './routes/demo/$demoId'
import { Route as CharacterIdRouteImport } from './routes/character/$id'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoIndexRoute = DemoIndexRouteImport.update({
  id: '/demo/',
  path: '/demo/',
  getParentRoute: () => rootRouteImport,
} as any)
const CharacterListIndexRoute = CharacterListIndexRouteImport.update({
  id: '/characterList/',
  path: '/characterList/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoDemoIdRoute = DemoDemoIdRouteImport.update({
  id: '/demo/$demoId',
  path: '/demo/$demoId',
  getParentRoute: () => rootRouteImport,
} as any)
const CharacterIdRoute = CharacterIdRouteImport.update({
  id: '/character/$id',
  path: '/character/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/character/$id': typeof CharacterIdRoute
  '/demo/$demoId': typeof DemoDemoIdRoute
  '/characterList': typeof CharacterListIndexRoute
  '/demo': typeof DemoIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/character/$id': typeof CharacterIdRoute
  '/demo/$demoId': typeof DemoDemoIdRoute
  '/characterList': typeof CharacterListIndexRoute
  '/demo': typeof DemoIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/character/$id': typeof CharacterIdRoute
  '/demo/$demoId': typeof DemoDemoIdRoute
  '/characterList/': typeof CharacterListIndexRoute
  '/demo/': typeof DemoIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/character/$id'
    | '/demo/$demoId'
    | '/characterList'
    | '/demo'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/character/$id' | '/demo/$demoId' | '/characterList' | '/demo'
  id:
    | '__root__'
    | '/'
    | '/character/$id'
    | '/demo/$demoId'
    | '/characterList/'
    | '/demo/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CharacterIdRoute: typeof CharacterIdRoute
  DemoDemoIdRoute: typeof DemoDemoIdRoute
  CharacterListIndexRoute: typeof CharacterListIndexRoute
  DemoIndexRoute: typeof DemoIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/': {
      id: '/demo/'
      path: '/demo'
      fullPath: '/demo'
      preLoaderRoute: typeof DemoIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/characterList/': {
      id: '/characterList/'
      path: '/characterList'
      fullPath: '/characterList'
      preLoaderRoute: typeof CharacterListIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/$demoId': {
      id: '/demo/$demoId'
      path: '/demo/$demoId'
      fullPath: '/demo/$demoId'
      preLoaderRoute: typeof DemoDemoIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/character/$id': {
      id: '/character/$id'
      path: '/character/$id'
      fullPath: '/character/$id'
      preLoaderRoute: typeof CharacterIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CharacterIdRoute: CharacterIdRoute,
  DemoDemoIdRoute: DemoDemoIdRoute,
  CharacterListIndexRoute: CharacterListIndexRoute,
  DemoIndexRoute: DemoIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
